name: Deploy to Fly.io

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

jobs:
  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy Backend
        run: flyctl deploy --config fly.toml
        working-directory: ./

  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy Frontend
        run: flyctl deploy --config fly.toml
        working-directory: ./frontend

  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.25'

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: go test ./...

      - name: Build application
        run: go build -o main .

  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Bun
        run: npm install -g bun

      - name: Install dependencies
        run: bun install
        working-directory: ./frontend

      - name: Run linting
        run: bun run lint
        working-directory: ./frontend

      - name: Build frontend
        run: bun run build
        working-directory: ./frontend
